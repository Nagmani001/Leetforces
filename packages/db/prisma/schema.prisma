// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String          @id @default(uuid())
  username      String
  email         String
  password      String
  ProblemStatus ProblemStatus[]
}

model ProblemStatus {
  userId    String
  user      User    @relation(fields: [userId], references: [id])
  problemId Int
  problem   Problem @relation(fields: [problemId], references: [id])
  status    Status  @default(NOTSTARTED)

  @@id([userId, problemId])
}

model Problem {
  id                Int              @id @default(autoincrement())
  title             String           @unique
  DescriptionTop    String // markdown 
  DescriptionBottom String? // markdown 
  cpuTimeLimit      Int
  memoryLimit       Int
  basicTestCases    BasicTestCases[]
  testcases         TestCase[]
  difficulty        Difficulty
  ProblemStatus     ProblemStatus[]
}

model TestCase {
  id        String   @id @default(uuid())
  input     String
  output    String
  Problem   Problem? @relation(fields: [problemId], references: [id])
  problemId Int
}

model BasicTestCases {
  id        String   @id @default(uuid())
  input     String
  output    String
  Problem   Problem? @relation(fields: [problemId], references: [id])
  problemId Int
}

enum Difficulty {
  EASY
  MEDIUM
  HARD
}

enum Status {
  ATTEMPTED
  SOLVED
  NOTSTARTED
}
